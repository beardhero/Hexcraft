"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dumpChanges = void 0;
var _1 = require("./");
var MapSchema_1 = require("./types/MapSchema");
function dumpChanges(schema) {
    var changeTrees = [schema['$changes']];
    var numChangeTrees = 1;
    var dump = {};
    var currentStructure = dump;
    var _loop_1 = function (i) {
        var changeTree = changeTrees[i];
        // TODO: this method doesn't work as expected.
        changeTree.changes.forEach(function (change) {
            var ref = changeTree.ref;
            var fieldIndex = change.index;
            var field = (ref instanceof _1.Schema)
                ? ref['_definition'].fieldsByIndex[fieldIndex]
                : (ref instanceof MapSchema_1.MapSchema)
                    ? ref['$indexes'].get(fieldIndex)
                    : ref['$indexes'][fieldIndex];
            currentStructure[field] = changeTree.getValue(fieldIndex);
        });
    };
    for (var i = 0; i < numChangeTrees; i++) {
        _loop_1(i);
    }
    return dump;
}
exports.dumpChanges = dumpChanges;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdUJBQTRCO0FBRTVCLCtDQUE4QztBQUc5QyxTQUFnQixXQUFXLENBQUMsTUFBYztJQUN0QyxJQUFNLFdBQVcsR0FBaUIsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUN2RCxJQUFJLGNBQWMsR0FBRyxDQUFDLENBQUM7SUFFdkIsSUFBTSxJQUFJLEdBQUcsRUFBRSxDQUFDO0lBQ2hCLElBQUksZ0JBQWdCLEdBQUcsSUFBSSxDQUFDOzRCQUVuQixDQUFDO1FBQ04sSUFBTSxVQUFVLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWxDLDhDQUE4QztRQUU5QyxVQUFVLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFDLE1BQU07WUFDOUIsSUFBTSxHQUFHLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQztZQUMzQixJQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBRWhDLElBQU0sS0FBSyxHQUFHLENBQUMsR0FBRyxZQUFZLFNBQU0sQ0FBQztnQkFDakMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDO2dCQUM5QyxDQUFDLENBQUMsQ0FBQyxHQUFHLFlBQVkscUJBQVMsQ0FBQztvQkFDeEIsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDO29CQUNqQyxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFBO1lBR3JDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDOUQsQ0FBQyxDQUFDLENBQUM7O0lBakJQLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxjQUFjLEVBQUUsQ0FBQyxFQUFFO2dCQUE5QixDQUFDO0tBbUJUO0lBRUQsT0FBTyxJQUFJLENBQUM7QUFDaEIsQ0FBQztBQTdCRCxrQ0E2QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEgfSBmcm9tIFwiLi9cIjtcbmltcG9ydCB7IE9QRVJBVElPTiB9IGZyb20gXCIuL3NwZWNcIjtcbmltcG9ydCB7IE1hcFNjaGVtYSB9IGZyb20gXCIuL3R5cGVzL01hcFNjaGVtYVwiO1xuaW1wb3J0IHsgQ2hhbmdlVHJlZSB9IGZyb20gXCIuL2NoYW5nZXMvQ2hhbmdlVHJlZVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gZHVtcENoYW5nZXMoc2NoZW1hOiBTY2hlbWEpIHtcbiAgICBjb25zdCBjaGFuZ2VUcmVlczogQ2hhbmdlVHJlZVtdID0gW3NjaGVtYVsnJGNoYW5nZXMnXV07XG4gICAgbGV0IG51bUNoYW5nZVRyZWVzID0gMTtcblxuICAgIGNvbnN0IGR1bXAgPSB7fTtcbiAgICBsZXQgY3VycmVudFN0cnVjdHVyZSA9IGR1bXA7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bUNoYW5nZVRyZWVzOyBpKyspIHtcbiAgICAgICAgY29uc3QgY2hhbmdlVHJlZSA9IGNoYW5nZVRyZWVzW2ldO1xuXG4gICAgICAgIC8vIFRPRE86IHRoaXMgbWV0aG9kIGRvZXNuJ3Qgd29yayBhcyBleHBlY3RlZC5cblxuICAgICAgICBjaGFuZ2VUcmVlLmNoYW5nZXMuZm9yRWFjaCgoY2hhbmdlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZWYgPSBjaGFuZ2VUcmVlLnJlZjtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkSW5kZXggPSBjaGFuZ2UuaW5kZXg7XG5cbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gKHJlZiBpbnN0YW5jZW9mIFNjaGVtYSlcbiAgICAgICAgICAgICAgICA/IHJlZlsnX2RlZmluaXRpb24nXS5maWVsZHNCeUluZGV4W2ZpZWxkSW5kZXhdXG4gICAgICAgICAgICAgICAgOiAocmVmIGluc3RhbmNlb2YgTWFwU2NoZW1hKVxuICAgICAgICAgICAgICAgICAgICA/IHJlZlsnJGluZGV4ZXMnXS5nZXQoZmllbGRJbmRleClcbiAgICAgICAgICAgICAgICAgICAgOiByZWZbJyRpbmRleGVzJ11bZmllbGRJbmRleF1cblxuXG4gICAgICAgICAgICBjdXJyZW50U3RydWN0dXJlW2ZpZWxkXSA9IGNoYW5nZVRyZWUuZ2V0VmFsdWUoZmllbGRJbmRleCk7XG4gICAgICAgIH0pO1xuXG4gICAgfVxuXG4gICAgcmV0dXJuIGR1bXA7XG59Il19